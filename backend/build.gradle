buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'mvp'
}

distributions {
	main {
		baseName = 'mvp'
	}
}

def getVersion = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'describe', '--tags', '--abbrev=7', '--dirty'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}
mainClassName = 'com.elvaco.mvp.MvpApplication'
applicationName = 'mvp'
version = getVersion()
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-actuator")

	runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
	from('../frontend/dist') {
		into 'static'
	}
}

jar.dependsOn(':frontend:assemble')
