import com.github.spotbugs.SpotBugsTask

plugins {
  id "com.github.spotbugs" version "1.6.4"
  id "com.github.ben-manes.versions" version "0.20.0"
}

def getVersion = {->
  def versionFile = new File('.version')
  try {
    def command = 'git describe --tags --abbrev=7 --dirty'
    def proc = command.execute()
    proc.waitFor()

    versionFile.createNewFile()
    versionFile.text = proc.text.trim()

    return proc.text.trim()
  } catch (java.io.IOException e) {
    if (versionFile.exists()) {
      return versionFile.text.trim()
    } else {
      return "UNKNOWN"
    }
  }
}

allprojects {
  version = getVersion()

  repositories {
    maven {
      url 'http://artifactory2.elvaco.local/artifactory/jcenter'
    }
    mavenCentral()
  }
}

subprojects {subproject ->

  tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
  }

  tasks.withType(Test) {
    testLogging {
      events "started", "passed", "skipped", "failed"
      showExceptions true
      showStackTraces true
      exceptionFormat 'full'
    }
  }

  plugins.withType(JavaPlugin) {
    /* No released version of Spring Boot support Java 11, yet. We'll have to wait for 2.1.0.*/
    // sourceCompatibility = JavaVersion.VERSION_11
    // targetCompatibility = JavaVersion.VERSION_11

    sourceCompatibility = JavaVersion.VERSION_1_10
    targetCompatibility = JavaVersion.VERSION_1_10

    plugins.apply('idea')
    plugins.apply('eclipse')
    plugins.apply('checkstyle')
    plugins.apply('com.github.spotbugs')

    idea {
      module {
        outputDir = file("$buildDir/classes/main")
        testOutputDir = file("$buildDir/classes/test")
        generatedSourceDirs += file("$buildDir/generated/querydsl")
        generatedSourceDirs += file("$buildDir/generated/jooq")
        sourceDirs += file("$buildDir/generated/querydsl")
        sourceDirs += file("$buildDir/generated/jooq")
      }
    }

    checkstyle {
      ignoreFailures = false
      configDir = file("$rootDir/backend/config/checkstyle/")
      configFile = file("$rootDir/backend/config/checkstyle/checkstyle.xml")
      toolVersion = '8.5'
    }

    tasks.withType(SpotBugsTask) {
      excludeFilter = file("$rootDir/backend/config/spotbugs/excludeFilter.xml")
      reports {
        xml.enabled false
      }
    }
  }
}

task checkstyle {
  dependsOn subprojects.collect {it.tasks.withType(Checkstyle)}
}

task spotbugs {
  dependsOn subprojects.collect {it.tasks.withType(com.github.spotbugs.SpotBugsTask)}
}
