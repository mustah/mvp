image:
    name: gradle:jdk8

stages:
    - prepare
    - build
    - test
    - publish
    - deploy

variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.caching=true"
    SALTAPI_URL: "https://salt-master:8000"
    SALTAPI_EAUTH: "pam"
    SALTAPI_USER: "administrator"
    SALTAPI_PASS: "password2"

.no_cache: &no_cache
     cache:
        key: "$CI_COMMIT_REF_NAME-no_cache"

.cache_gradle: &cache_gradle
     cache:
        key: "$CI_COMMIT_REF_NAME-gradle"
        paths:
          - .gradle/caches
          - .yarn
          - frontend/.fusebox/cache
          - .version

.cache_gradle_read_only: &cache_gradle_read_only
     cache:
        key: "$CI_COMMIT_REF_NAME-gradle"
        paths:
          - .gradle/caches
          - .yarn
          - frontend/.fusebox/cache
          - .version
        policy: pull

before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - export YARN_CACHE_FOLDER=`pwd`/.yarn

gradle:clean:
    <<: *cache_gradle
    stage: prepare
    script:
        - gradle clean
    only:
      refs:
        - master
        - develop
        - /^release-.*$/

docker:postgresql:
    <<: *no_cache
    stage: prepare
    tags:
      - shell
    script:
      - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab.elvaco.se:4567
      - docker build -t gitlab.elvaco.se:4567/elvaco/mvp/postgresql:latest -f Dockerfile-postgresql .
      - docker push gitlab.elvaco.se:4567/elvaco/mvp/postgresql:latest

docker:ci-utils:
    <<: *no_cache
    stage: prepare
    tags:
      - shell
    script:
      - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab.elvaco.se:4567
      - docker build -t gitlab.elvaco.se:4567/elvaco/mvp/ci-utils:latest -f Dockerfile-ci-utils .
      - docker push gitlab.elvaco.se:4567/elvaco/mvp/ci-utils:latest

prepare:version:
    <<: *no_cache
    stage: prepare
    image:
      name: alpine/git:latest
      entrypoint: ["/bin/sh", "-c"]
    script:
      - git describe --tags --abbrev=7 --dirty > .version
      - chmod 644 .version
    artifacts:
        paths:
          - .version
        expire_in: 7 days

gradle:build:
    <<: *cache_gradle
    stage: build
    dependencies:
        - prepare:version
    script:
        - gradle build -x check
    artifacts:
        name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-${CI_COMMIT_SHA:0:7}"
        paths:
            - backend/configuration/build/distributions/
            - .version
        expire_in: 1 week

test:system:
    <<: *cache_gradle_read_only
    stage: test
    services:
        - name: gitlab.elvaco.se:4567/elvaco/mvp/postgresql:latest
          alias: pg_host
        - name: rabbitmq
          alias: rabbit_host
    script:
        - gradle systemTestCI
    artifacts:
        name: "${CI_COMMIT_REF_NAME}-system"
        when: on_failure
        paths:
          - backend/configuration/build/reports/tests/systemTestCI/*
        expire_in: 7 days

test:unit_and_IT:
    <<: *cache_gradle_read_only
    stage: test
    artifacts:
        name: "${CI_COMMIT_REF_NAME}-integration"
        when: on_failure
        paths:
          - backend/configuration/build/reports/tests/integrationTest/*
        expire_in: 7 days
    script:
        - gradle check -x systemTest

publish:artifactory:
    <<: *no_cache
    image: gitlab.elvaco.se:4567/elvaco/mvp/ci-utils:latest
    stage: publish
    when: manual
    dependencies:
      - gradle:build
    script:
        - export ARTIFACTORY_URL=http://artifactory2.elvaco.local/artifactory/Elvaco/MVP
        - export MVP_ARTIFACT=$(find ./backend/configuration/build/distributions -name 'mvp*.tar')
        - export MVP_SHA1SUM=$(sha1sum $MVP_ARTIFACT|awk '{ print $1 }')
        - export MVP_MD5SUM=$(md5sum $MVP_ARTIFACT|awk '{ print $1 }')
        - curl -i -X PUT -u admin:password -T $MVP_ARTIFACT -H "X-Checksum-Sha1:$MVP_SHA1SUM" -H "X-Checksum-MD5:$MVP_MD5SUM" $ARTIFACTORY_URL/$(basename $MVP_ARTIFACT)

deploy:recreate-dbs:
  <<: *no_cache
  image: gitlab.elvaco.se:4567/elvaco/mvp/ci-utils:latest
  stage: deploy
  when: manual
  script:
    - pepper -G 'roles:mvp-app' cmd.run 'systemctl stop elvaco-mvp.service'
    - pepper -G 'roles:postgresql-server' state.apply mvp.db.drop
    - pepper -G 'roles:postgresql-server' state.apply mvp.db.create

deploy:staging:
  <<: *no_cache
  image: gitlab.elvaco.se:4567/elvaco/mvp/ci-utils:latest
  stage: deploy
  when: manual
  script:
    - pepper -G 'roles:salt-master'  event.fire_master update salt/fileserver/gitfs/update
    - sleep 10
    - pepper -C 'G@roles:mvp-app and G@env:mvp-staging' state.apply

deploy:production:
  <<: *no_cache
  image: gitlab.elvaco.se:4567/elvaco/mvp/ci-utils:latest
  stage: deploy
  when: manual
  script:
    - pepper -C 'G@roles:mvp-app and G@env:mvp-prod' state.apply
